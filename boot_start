#!/bin/bash

echo "##########################"
echo "Starting Mini Race Control"
echo "##########################"

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"


SEND_TO_FIREBASE=true;

count=0
echo "will now wait for google"
until $(curl --output /dev/null --silent --head --fail https://www.google.ch); do
    (( count++ ));
    if [ ${count} -ge 30 ]; then
        echo ' [timed out]';
        sudo lsof -i
        echo "https://www.google.ch"
        curl https://www.google.ch;
        SEND_TO_FIREBASE=false;
        break;
    fi;
    printf '.';
    sleep 1;
done
if [ "${SEND_TO_FIREBASE}" = true ]; then
    echo " [server responded after approx ${count}s]";
else
    echo " [server did not respond after approx ${count}s]";
fi

set -e

cd $DIR

if [ "${SEND_TO_FIREBASE}" = true ]; then
    sudo -u pi git pull

    #sudo pip install plotly --upgrade

    echo "##########################"
    echo "sync"

    sync
else
    echo "##########################"
    echo " skipping update - offline"
fi

echo "##########################"
echo "start pirace send to fb: ${SEND_TO_FIREBASE}"
today=`date +%Y-%m-%d`

mkdir logs

sudo python PiRace.py ${SEND_TO_FIREBASE} | tee -a logs/log-${today}.txt


echo "##########################"
echo "done"
echo "##########################"
